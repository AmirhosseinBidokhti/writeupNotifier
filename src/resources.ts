// Define types for clarity and reusability
type RssBlogUrl = string;
type YoutubeChannelId = string;
type TagSlug = string;
type MediumUsers = string;
type MediumUrls = {
  readonly MEDIUM: string;
  readonly INFOSEC_WRITEUPS: string;
  readonly USER: string;
};

// Define the Medium URLs constant
export const MEDIDUM_URLS: MediumUrls = {
  MEDIUM: 'https://medium.com/feed/tag',
  INFOSEC_WRITEUPS: 'https://infosecwriteups.com/feed/tagged',
  USER: 'https://medium.com/@/feed'
};

// Use readonly arrays to prevent accidental modification
export const RSS_BLOGS: readonly RssBlogUrl[] = [
  'https://ysamm.com/?feed=rss2',
  'https://bugs.xdavidhu.me/feed.xml',
  //'https://securib.ee/feed.xml', redirects to other bee site
  'https://rss.beehiiv.com/feeds/ZfYiFHGg86.xml',
  'https://blog.assetnote.io/feed.xml',
  'https://omespino.com/feed/',
  //'https://blog.yeswehack.com/feed/linklibraryfeed/?settingsset=1', no longer works, new weblog doesn't have rss. so many good writeups should figure another way to parse them
  'https://blog.intigriti.com/feed/',
  'https://ajxchapman.github.io/feed',
  'https://honoki.net/feed/', // works but format is diff. retest it
  'https://lab.wallarm.com/feed/',
  'https://buer.haus/feed/',
  //'https://techblog.mediaservice.net/feed/', down for now
  'https://blog.zsec.uk/rss/', // works but format is not normal i guess
  'https://itm4n.github.io/feed',
  'https://snowscan.io/feed',
  'http://feeds.feedburner.com/blogspot/Aohx',
  'https://www.n00py.io/feed/',
  'https://0xdf.gitlab.io/feed.xml',
  'https://regilero.github.io/feed.xml', // retest it
  'https://securitytrails.com/blog.rss', // sometimes the cloudflare is disturbing. retest it
  'https://portswigger.net/blog/rss',
  'https://0xpatrik.com/rss/',
  'https://robertchen.cc/feed.xml',
  'https://blog.it-securityguard.com/feed/', // looks like its down for good
  'https://pwning.re/feed.xml',
  'https://labs.detectify.com/feed/',
  'https://medium.com/feed/bugbountywriteup/tagged/bug-bounty',
  'https://blog.appsecco.com/feed',
  'https://www.geekboy.ninja/blog/feed/',
  'https://whitton.io/feed.xml',
  'https://bitquark.co.uk/blog/feed.rss',
  'https://www.arneswinnen.net/feed/',
  'https://blog.innerht.ml/rss/',
  'https://seanmelia.wordpress.com/feed/',
  'https://gracefulsecurity.com/feed/', // down? retest it
  'https://secgeek.net/category/write-ups/feed/',
  'https://philippeharewood.com/feed/',
  'http://blog.redxorblue.com/feeds/posts/default',
  'https://web-in-security.blogspot.com/feeds/posts/default',
  'https://brutelogic.com.br/blog/feed/',
  'https://tisiphone.net/feed/',
  'https://infosecwriteups.com/feed',
  'https://parsiya.net/index.xml'
];

// TODO: Watch for youtube appsec content via a proper google api
export const YOUTUBE_CHANNELS: readonly YoutubeChannelId[] = [
  'UCQN2DsjnYH60SFBIA6IkNwg',
  'UCZDyl7G-Lq-EMVO8PfDFp9g',
  'UCCZDt7MuC3Hzs6IH4xODLBw',
  'UCa6eh7gCkpPo5XXUDfygQQA',
  'UCCUFgj-52_ryvpQUacylRpg',
  'UC0ArlFuFYMpEewyRBzdLHiw',
  'UCPiN9NPjIer8Do9gUFxKv7A',
  'UCq9IyPMXiwD8yBFHkxmN8zg',
  'UCXXXoi68Hv6caNLWfw7j8MQ',
  'UCCzvz8jsulXm27Cd6k3vzyg',
  'UCARsgS1stRbRgh99E63Q3ng',
  'UCUfO02gdMDXgOJWdv_jiLMg',
  'UC0ZTPkdxlAKf-V33tqXwi3Q',
  'UCjBhClJ59W4hfUly51i11hg',
  'UClcE-kVhqyiHCcjYwcpfj9w',
  'UC6Om9kAkl32dWlDSNlDS9Iw',
  'UC3s0BtrBJpwNDaflRSoiieQ',
  'UCPPAYs04kwfXcHnerm_ueFw',
  'UCJ6q9Ie29ajGqKApbLqfBOg',
  'UCRFG_j0cgLWtJOG6fl_-rxQ',
  'UC286ntgASMskhPIJQebJVvA',
  'UCyBZ1F8ZCJVKSIJPrLINFyA',
  'UCk0f0svao7AKeK3RfiWxXEA',
  'UCyInWbfnusRozzHDh7cKuQA',
  'UCXPdZsu8g1nKerd-o5A75vA',
  'UCVeW9qkBjo3zosnqUbG7CFw',
  'UCF75UK6iUcHxUdC8OMw7w4A',
  'UCDqZyVCTwg9UyRWKgQ7Gizg',
  'UCszyA_7DVMz63bI30NW2a_g'
];

export const TAG_SLUGS: readonly TagSlug[] = [
  'application-security',
  'hacking',
  'infosec',
  'cybersecurity',
  'ctf',
  'penetration-testing',
  'writeup',
  'tryhackme',
  'vulnhub',
  'security',
  'bug-hunter',
  'bug-bounty',
  'info-sec-writeups',
  'hackthebox-writeup',
  'ethical-hacking',
  'api-security',
  'bug-bounty-tips',
  'bugbounty-writeup',
  'bug-bounty-writeup',
  'bug-bounty-hunter',
  'recon',
  'cross-site-scripting',
  'xss',
  'xss-waf-bypass',
  'waf-bypass',
  'sqli',
  'rce-vulnerability',
  'sql-injection',
  'rce',
  'remote-code-execution',
  'ssrf',
  'server-side-request-forgery',
  'idor',
  'insecure-direct-object-reference',
  'broken-access-control',
  'web-cache-poisoning',
  'github-dorking',
  'dorks',
  'subdomain-enumeration',
  'subdomain-takeover',
  'security-research',
  'ethical-hacking'
];

export const MEDIUM_USERS: readonly MediumUsers[] = [
  '0xdekster',
  '0x0021h',
  '0x01alka',
  '0x2m',
  '0x4kd',
  '0xbadb00da',
  '0xgad',
  '0xgaurang',
  '0xjin',
  '0xm5awy',
  '0xmahmoudjo0',
  '0xmayankgarg',
  '0xraminfosec',
  '0xt4144t',
  '16521092',
  '3bodymo',
  '4bdoz',
  'a-constant',
  'abhishekmorla',
  'ahmadaabdulla',
  'ahmdhalabi',
  'ahmed8magdy',
  'aidilarf',
  'akashhamal0x01',
  'akshartank',
  'akshayravic09yc47',
  'alpinnnnnn13',
  'andrei-abakumov',
  'aob-89072',
  'apth3hack3r',
  'ashok314',
  'balapraneeth',
  'basyounii',
  'bendtheory',
  'bhupendra1238',
  'binamrapandey',
  'bugbountyhunter',
  'bughunter25',
  'bxmbn',
  'c0nqr0r',
  'caesarevan23',
  'captainhoook',
  'cirius',
  'clarkvoss',
  'cyberguy0xd1',
  'cyc10n3',
  'd0nut',
  'daturamater',
  'dewangpanchal98',
  'dhakalbibek',
  'divyanshsharma2401',
  'dphoeniixx',
  'dragon-sec',
  'dudy2kk',
  'edmundaa222',
  'emanuel-beni',
  'engrinside',
  'ertugrull',
  'faizanwrites',
  'falcnix',
  'fatnassifiras',
  'filipaze',
  'flattsecurity',
  'fuomag9',
  'geekboyranjeet',
  'gevakun',
  'gokulap',
  'hajarerutik9',
  'hamzadzworm',
  'hemantsolo',
  'hencohen10',
  'hunter-55',
  'iamsaugat',
  'imranhudaa',
  'inakcf',
  'irsl',
  'ivreznap',
  'ja1sharma',
  'jayateerthag',
  'jmrcsnchz',
  'joelmcg1993',
  'jowin922',
  'junoonbro',
  'jychp',
  'kabilan1290',
  'kaif0x01',
  'kingcoolvikas',
  'kingkaran977',
  'komradz86',
  'krevetk0',
  'lethanhphuc-pk',
  'logicbomb',
  'ltsirkov',
  'maordayanofficial',
  'marxchryz',
  'master-sec',
  'maxva',
  'mearegtu',
  'med-mahmoudi26',
  'mehedishakeel',
  'mickeydebaets',
  'mikekitckchan',
  'mikey96',
  'mikko-kenttala',
  'mohamedtarekq',
  'mohsinalibukc',
  'mokhansec',
  'mr23r0',
  'mrpentestguy',
  'mtechghost',
  'muhammad-aamir',
  'mvinni',
  'n0lsec',
  'n1ghtmar3',
  'nassimchami',
  'neroli',
  'nmochea',
  'noob3xploiter',
  'notifybugme',
  'notmarshmllow',
  'nullr3x',
  'nvk0x',
  'orwaatyat',
  'otmastimi',
  'ozguralp',
  'pallabjyoti218',
  'parasarora06',
  'petrusviet',
  'ph-hitachi',
  'pharish4948',
  'polarply',
  'prajwoldhungana487',
  'prashantbhatkal2000',
  'priyankraval',
  'pullerjsecu',
  'r4id3n',
  'rafipiun',
  'rakesh-thodupunoori',
  'randyarios',
  'riteshgohil-25',
  'rohit-soni',
  'rohit443',
  'ronak-9889',
  'ruvlol',
  'rv09',
  's3c',
  'saadahmedx',
  'sagarsajeev',
  'sank-dahal',
  'santoshdbobade',
  'sapt',
  'seqrity',
  'shafouz',
  'shail-official',
  'sharanthehunter',
  'sharmajijvs',
  'shellbr3ak',
  'sheshasai',
  'shreyaskoli',
  'shrirangdiwakar',
  'shubhdeepp',
  'sirleeroyjenkins',
  'sm4rty',
  'spongebhav',
  'sunilyedla',
  'surya-dev',
  'sushant-kamble',
  'thevillagehacker',
  'thexssrat',
  'tmosh',
  'tusharvaidya16',
  'u-itachi',
  'v3d',
  'valsamaras',
  'vanshal',
  'varmaanu001',
  'vbharad',
  'vengeance',
  'veshraj',
  'vickieli',
  'vijetareigns',
  'vikaran101',
  'virdoexhunter',
  'virtuvil',
  'wahaz',
  'x-vector',
  'xcoder074',
  'xko2x',
  'xkurtph',
  'xthemo',
  'y0ungdst',
  'yaseenzubair',
  'yasshk',
  'yilmazcanyigit',
  'ynoof',
  'zemnmez',
  'zerocode-ph',
  'zoidsec',
  'zonduu',
  'zseano',
  'int0x33',
  'jonathanbouman',
  '0x0Asif',
  '0x48piraj',
  '0xankush',
  '0xBarakat',
  '0xelkot',
  '0xHyde',
  '0xnaeem',
  '720922',
  '7azimo',
  '80vul',
  '_deshine_',
  'aa.pietruczuk',
  'aakashadhikari786',
  'aayushpokhrel',
  'abbasheybati1',
  'abdalrahman.alshammas',
  'abdelfattahibrahim',
  'abhijeetbiswas_',
  'abhinavsecondary',
  'abhinda1996',
  'abidafahd',
  'abireena2002',
  'absstbh',
  'adam.adreleve',
  'addictrao20',
  'adhaamsayed3',
  'adonkidz7',
  'adrien_jeanneau',
  'agrawalsmart7',
  'airlanggamurthi',
  'aishwaryakendle',
  'akshukatkar',
  'albeckshahar',
  'alex.birsan',
  'alirazzaq',
  'alonnsoandres',
  'Alra3ees',
  'alyanwar',
  'amangupta566',
  'ameerassadi',
  'amineaboud',
  'amithc38',
  'amnotacat',
  'androgaming1912',
  'aniltom',
  'ariffadhlullah2310',
  'armandjasharaj',
  'ashokcpg',
  'bababounty99',
  'bachrudinashari',
  'baibhavanandjha',
  'balook',
  'behnam.yazdanpanah',
  'ben.aymen.182',
  'bhatiagaurav1211',
  'bilalmerokhel',
  'Bishoo97x',
  'black_b',
  'bobvanderstaak',
  'carlosdanielgiovanella',
  'cc1h2e1',
  'ChandSingh',
  'CI_Fuzz',
  'circleninja',
  'cyberali',
  'Cybervenom',
  'd.harish008',
  'D0rkerDevil',
  'daniel.thatcher',
  'DarkMatterMatt',
  'dheerajkmadhukar',
  'dirtycoder0124',
  'DK999',
  'ducanhbui',
  'erik.wynter',
  'escapesequence89',
  'EX_097',
  'faique',
  'fbotes2',
  'frycos',
  'GeneralEG',
  'girishbo58',
  'goyalvartul',
  'h4x0r_dz',
  'Hacker0x01',
  'hackerb0y',
  'harrmahar',
  'haxor8595',
  'Hossam.Mesbah',
  'hungrybytes',
  'Iam5345',
  'ifediri',
  'iknowhatodo',
  'impratikdabhi',
  'imunissar786',
  'ironfisto',
  'IroquoisPliskin',
  'Jacksonkv22',
  'jacopotediosi',
  'JubaBaghdad',
  'Kntjrld',
  'LogicalHunter',
  'Mr.Daman.Singh',
  'Mthirup',
  'N0_M3ga_Hacks',
  'NahamSec',
  'NinadMishra',
  'Parag_Bagul',
  'R0X4R',
  'Sheshasai',
  'SkiMask0',
  'Skylinearafat',
  'SQLiBasic',
  'St00rm',
  'StealthyBugs',
  'Steiner254',
  'SyntaxError4',
  'TheKomodoconsulting',
  'TheShahzada',
  'Thuva11',
  'TnMch',
  'Wh11teW0lf',
  'YumiSec',
  'ZishanAdThandar',
  'cappriciosec',
  'newp_th',
  'pdelteil',
  'tomnomnom'
];

// export function setupMediumLinkTags(): string[] {

// PROBLEMS WITH THIS FUNCTION:
// The map method is being used solely for side effects (pushing links into the links array and logging). This is against the intended use of map, which is designed to transform and return a new array.
//	If you don’t need the return value, use a loop like forEach instead.
//Variable Mutability:
//•	Using links.push means the links array is mutable, which can be avoided by using immutable techniques for better functional programming principles.

//   const links: string[] = [];

//   TAG_SLUGS.map((tag) => {
//     const mediumLink: string = `${MEDIDUM_URLS.MEDIUM}/${tag}`;
//     const infosecLink: string = `${MEDIDUM_URLS.INFOSEC_WRITEUPS}/${tag}`;
//     console.log(mediumLink);
//     console.log(infosecLink);
//     links.push(mediumLink);
//     links.push(infosecLink);
//   });

//   return links;
// }

export function setupMediumTags(): string[] {
  // Combines the transformation and flattening of the resulting array into a single step. It avoids the need for manually pushing elements to an array.
  // No need to mutate a links array, as flatMap directly returns the desired result.
  return TAG_SLUGS.flatMap((tag) => [`${MEDIDUM_URLS.MEDIUM}/${tag}`, `${MEDIDUM_URLS.INFOSEC_WRITEUPS}/${tag}`]);
}

export function setupMediumUsers(): string[] {
  return MEDIUM_USERS.map((username) => MEDIDUM_URLS.USER.replace('@', `@${username}`));
}
